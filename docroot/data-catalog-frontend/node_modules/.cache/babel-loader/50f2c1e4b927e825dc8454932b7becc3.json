{"ast":null,"code":"var _jsxFileName = \"/var/www/data-catalog-frontend/src/lib/data-catalog-components/src/components/List/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Ul from './Ul';\n\nfunction List(props) {\n  var ComponentToRender = props.component;\n  var content = React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }); // If we have items, render them\n\n  if (props.items) {\n    content = props.items.map(function (item) {\n      return React.createElement(ComponentToRender, {\n        key: \"item-\".concat(item.ref),\n        item: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      });\n    });\n  } else {\n    // Otherwise render a single component\n    content = React.createElement(ComponentToRender, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Ul, {\n    className: props.className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, content);\n}\n\nList.propTypes = {\n  component: PropTypes.func.isRequired,\n  items: PropTypes.array,\n  className: PropTypes.string\n};\nexport default List;","map":{"version":3,"sources":["/var/www/data-catalog-frontend/src/lib/data-catalog-components/src/components/List/index.js"],"names":["React","PropTypes","Ul","List","props","ComponentToRender","component","content","items","map","item","ref","className","propTypes","func","isRequired","array","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,EAAP,MAAe,MAAf;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB,MAAMC,iBAAiB,GAAGD,KAAK,CAACE,SAAhC;AACA,MAAIC,OAAO,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAf,CAFiB,CAIjB;;AACA,MAAIH,KAAK,CAACI,KAAV,EAAiB;AACbD,IAAAA,OAAO,GAAGH,KAAK,CAACI,KAAN,CAAYC,GAAZ,CAAgB,UAACC,IAAD;AAAA,aACtB,oBAAC,iBAAD;AAAmB,QAAA,GAAG,iBAAUA,IAAI,CAACC,GAAf,CAAtB;AAA4C,QAAA,IAAI,EAAED,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADsB;AAAA,KAAhB,CAAV;AAGH,GAJD,MAIO;AACH;AACAH,IAAAA,OAAO,GAAI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAX;AACH;;AAED,SACI,oBAAC,EAAD;AAAI,IAAA,SAAS,EAAEH,KAAK,CAACQ,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,OADL,CADJ;AAKH;;AAEDJ,IAAI,CAACU,SAAL,GAAiB;AACbP,EAAAA,SAAS,EAAEL,SAAS,CAACa,IAAV,CAAeC,UADb;AAEbP,EAAAA,KAAK,EAAEP,SAAS,CAACe,KAFJ;AAGbJ,EAAAA,SAAS,EAAEX,SAAS,CAACgB;AAHR,CAAjB;AAMA,eAAed,IAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Ul from './Ul';\n\nfunction List(props) {\n    const ComponentToRender = props.component;\n    let content = (<div></div>);\n\n    // If we have items, render them\n    if (props.items) {\n        content = props.items.map((item) => (\n            <ComponentToRender key={`item-${item.ref}`} item={item} />\n        ));\n    } else {\n        // Otherwise render a single component\n        content = (<ComponentToRender />);\n    }\n\n    return (\n        <Ul className={props.className}>\n            {content}\n        </Ul>\n    );\n}\n\nList.propTypes = {\n    component: PropTypes.func.isRequired,\n    items: PropTypes.array,\n    className: PropTypes.string,\n};\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}