{"ast":null,"code":"/*\n  Module dependencies\n*/\nvar ElementType = require('domelementtype');\n\nvar entities = require('entities');\n/*\n  Boolean Attributes\n*/\n\n\nvar booleanAttributes = {\n  __proto__: null,\n  allowfullscreen: true,\n  async: true,\n  autofocus: true,\n  autoplay: true,\n  checked: true,\n  controls: true,\n  default: true,\n  defer: true,\n  disabled: true,\n  hidden: true,\n  ismap: true,\n  loop: true,\n  multiple: true,\n  muted: true,\n  open: true,\n  readonly: true,\n  required: true,\n  reversed: true,\n  scoped: true,\n  seamless: true,\n  selected: true,\n  typemustmatch: true\n};\nvar unencodedElements = {\n  __proto__: null,\n  style: true,\n  script: true,\n  xmp: true,\n  iframe: true,\n  noembed: true,\n  noframes: true,\n  plaintext: true,\n  noscript: true\n};\n/*\n  Format attributes\n*/\n\nfunction formatAttrs(attributes, opts) {\n  if (!attributes) return;\n  var output = '',\n      value; // Loop through the attributes\n\n  for (var key in attributes) {\n    value = attributes[key];\n\n    if (output) {\n      output += ' ';\n    }\n\n    if (!value && booleanAttributes[key]) {\n      output += key;\n    } else {\n      output += key + '=\"' + (opts.decodeEntities ? entities.encodeXML(value) : value) + '\"';\n    }\n  }\n\n  return output;\n}\n/*\n  Self-enclosing tags (stolen from node-htmlparser)\n*/\n\n\nvar singleTag = {\n  __proto__: null,\n  area: true,\n  base: true,\n  basefont: true,\n  br: true,\n  col: true,\n  command: true,\n  embed: true,\n  frame: true,\n  hr: true,\n  img: true,\n  input: true,\n  isindex: true,\n  keygen: true,\n  link: true,\n  meta: true,\n  param: true,\n  source: true,\n  track: true,\n  wbr: true\n};\n\nvar render = module.exports = function (dom, opts) {\n  if (!Array.isArray(dom) && !dom.cheerio) dom = [dom];\n  opts = opts || {};\n  var output = '';\n\n  for (var i = 0; i < dom.length; i++) {\n    var elem = dom[i];\n    if (elem.type === 'root') output += render(elem.children, opts);else if (ElementType.isTag(elem)) output += renderTag(elem, opts);else if (elem.type === ElementType.Directive) output += renderDirective(elem);else if (elem.type === ElementType.Comment) output += renderComment(elem);else if (elem.type === ElementType.CDATA) output += renderCdata(elem);else output += renderText(elem, opts);\n  }\n\n  return output;\n};\n\nfunction renderTag(elem, opts) {\n  // Handle SVG\n  if (elem.name === \"svg\") opts = {\n    decodeEntities: opts.decodeEntities,\n    xmlMode: true\n  };\n  var tag = '<' + elem.name,\n      attribs = formatAttrs(elem.attribs, opts);\n\n  if (attribs) {\n    tag += ' ' + attribs;\n  }\n\n  if (opts.xmlMode && (!elem.children || elem.children.length === 0)) {\n    tag += '/>';\n  } else {\n    tag += '>';\n\n    if (elem.children) {\n      tag += render(elem.children, opts);\n    }\n\n    if (!singleTag[elem.name] || opts.xmlMode) {\n      tag += '</' + elem.name + '>';\n    }\n  }\n\n  return tag;\n}\n\nfunction renderDirective(elem) {\n  return '<' + elem.data + '>';\n}\n\nfunction renderText(elem, opts) {\n  var data = elem.data || ''; // if entities weren't decoded, no need to encode them back\n\n  if (opts.decodeEntities && !(elem.parent && elem.parent.name in unencodedElements)) {\n    data = entities.encodeXML(data);\n  }\n\n  return data;\n}\n\nfunction renderCdata(elem) {\n  return '<![CDATA[' + elem.children[0].data + ']]>';\n}\n\nfunction renderComment(elem) {\n  return '<!--' + elem.data + '-->';\n}","map":{"version":3,"sources":["/var/www/data-catalog-frontend/src/lib/data-catalog-components/node_modules/dom-serializer/index.js"],"names":["ElementType","require","entities","booleanAttributes","__proto__","allowfullscreen","async","autofocus","autoplay","checked","controls","default","defer","disabled","hidden","ismap","loop","multiple","muted","open","readonly","required","reversed","scoped","seamless","selected","typemustmatch","unencodedElements","style","script","xmp","iframe","noembed","noframes","plaintext","noscript","formatAttrs","attributes","opts","output","value","key","decodeEntities","encodeXML","singleTag","area","base","basefont","br","col","command","embed","frame","hr","img","input","isindex","keygen","link","meta","param","source","track","wbr","render","module","exports","dom","Array","isArray","cheerio","i","length","elem","type","children","isTag","renderTag","Directive","renderDirective","Comment","renderComment","CDATA","renderCdata","renderText","name","xmlMode","tag","attribs","data","parent"],"mappings":"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","sourcesContent":["/*\n  Module dependencies\n*/\nvar ElementType = require('domelementtype');\nvar entities = require('entities');\n\n/*\n  Boolean Attributes\n*/\nvar booleanAttributes = {\n  __proto__: null,\n  allowfullscreen: true,\n  async: true,\n  autofocus: true,\n  autoplay: true,\n  checked: true,\n  controls: true,\n  default: true,\n  defer: true,\n  disabled: true,\n  hidden: true,\n  ismap: true,\n  loop: true,\n  multiple: true,\n  muted: true,\n  open: true,\n  readonly: true,\n  required: true,\n  reversed: true,\n  scoped: true,\n  seamless: true,\n  selected: true,\n  typemustmatch: true\n};\n\nvar unencodedElements = {\n  __proto__: null,\n  style: true,\n  script: true,\n  xmp: true,\n  iframe: true,\n  noembed: true,\n  noframes: true,\n  plaintext: true,\n  noscript: true\n};\n\n/*\n  Format attributes\n*/\nfunction formatAttrs(attributes, opts) {\n  if (!attributes) return;\n\n  var output = '',\n      value;\n\n  // Loop through the attributes\n  for (var key in attributes) {\n    value = attributes[key];\n    if (output) {\n      output += ' ';\n    }\n\n    if (!value && booleanAttributes[key]) {\n      output += key;\n    } else {\n      output += key + '=\"' + (opts.decodeEntities ? entities.encodeXML(value) : value) + '\"';\n    }\n  }\n\n  return output;\n}\n\n/*\n  Self-enclosing tags (stolen from node-htmlparser)\n*/\nvar singleTag = {\n  __proto__: null,\n  area: true,\n  base: true,\n  basefont: true,\n  br: true,\n  col: true,\n  command: true,\n  embed: true,\n  frame: true,\n  hr: true,\n  img: true,\n  input: true,\n  isindex: true,\n  keygen: true,\n  link: true,\n  meta: true,\n  param: true,\n  source: true,\n  track: true,\n  wbr: true,\n};\n\n\nvar render = module.exports = function(dom, opts) {\n  if (!Array.isArray(dom) && !dom.cheerio) dom = [dom];\n  opts = opts || {};\n\n  var output = '';\n\n  for(var i = 0; i < dom.length; i++){\n    var elem = dom[i];\n\n    if (elem.type === 'root')\n      output += render(elem.children, opts);\n    else if (ElementType.isTag(elem))\n      output += renderTag(elem, opts);\n    else if (elem.type === ElementType.Directive)\n      output += renderDirective(elem);\n    else if (elem.type === ElementType.Comment)\n      output += renderComment(elem);\n    else if (elem.type === ElementType.CDATA)\n      output += renderCdata(elem);\n    else\n      output += renderText(elem, opts);\n  }\n\n  return output;\n};\n\nfunction renderTag(elem, opts) {\n  // Handle SVG\n  if (elem.name === \"svg\") opts = {decodeEntities: opts.decodeEntities, xmlMode: true};\n\n  var tag = '<' + elem.name,\n      attribs = formatAttrs(elem.attribs, opts);\n\n  if (attribs) {\n    tag += ' ' + attribs;\n  }\n\n  if (\n    opts.xmlMode\n    && (!elem.children || elem.children.length === 0)\n  ) {\n    tag += '/>';\n  } else {\n    tag += '>';\n    if (elem.children) {\n      tag += render(elem.children, opts);\n    }\n\n    if (!singleTag[elem.name] || opts.xmlMode) {\n      tag += '</' + elem.name + '>';\n    }\n  }\n\n  return tag;\n}\n\nfunction renderDirective(elem) {\n  return '<' + elem.data + '>';\n}\n\nfunction renderText(elem, opts) {\n  var data = elem.data || '';\n\n  // if entities weren't decoded, no need to encode them back\n  if (opts.decodeEntities && !(elem.parent && elem.parent.name in unencodedElements)) {\n    data = entities.encodeXML(data);\n  }\n\n  return data;\n}\n\nfunction renderCdata(elem) {\n  return '<![CDATA[' + elem.children[0].data + ']]>';\n}\n\nfunction renderComment(elem) {\n  return '<!--' + elem.data + '-->';\n}\n"]},"metadata":{},"sourceType":"module"}