'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _PageContainer = require('../PageContainer');

var _PageContainer2 = _interopRequireDefault(_PageContainer);

var _PageSection = require('../PageSection');

var _PageSection2 = _interopRequireDefault(_PageSection);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ConfigurablePage = function (_Component) {
    _inherits(ConfigurablePage, _Component);

    function ConfigurablePage() {
        _classCallCheck(this, ConfigurablePage);

        return _possibleConstructorReturn(this, (ConfigurablePage.__proto__ || Object.getPrototypeOf(ConfigurablePage)).apply(this, arguments));
    }

    _createClass(ConfigurablePage, [{
        key: 'render',
        value: function render() {

            var doc = this.props.doc;
            var pageSchema = this.props.configuration;

            var left = _react2.default.createElement('div', null);
            var centerCol = 12;
            if (pageSchema && Object.keys(pageSchema).indexOf('Left') !== -1) {
                left = _react2.default.createElement(
                    'div',
                    { className: 'col-sm-3' },
                    _react2.default.createElement(_PageSection2.default, { type: 'Left', pageSchema: pageSchema, doc: doc })
                );
                centerCol = 9;
            }

            return _react2.default.createElement(
                _PageContainer2.default,
                null,
                _react2.default.createElement(
                    'div',
                    { className: 'row' },
                    left,
                    _react2.default.createElement(
                        'div',
                        { className: 'col-sm-' + centerCol },
                        _react2.default.createElement(
                            'h1',
                            null,
                            doc.title
                        ),
                        _react2.default.createElement(_PageSection2.default, { type: 'Main', pageSchema: pageSchema, doc: doc }),
                        _react2.default.createElement(_PageSection2.default, { type: 'Table', pageSchema: pageSchema, doc: doc })
                    )
                )
            );
        }
    }]);

    return ConfigurablePage;
}(_react.Component);

exports.default = ConfigurablePage;