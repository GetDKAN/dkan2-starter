"use strict";

var _enzyme = require("enzyme");

var _react = _interopRequireDefault(require("react"));

var _reactIntl = require("react-intl");

var _RepoListItem = _interopRequireDefault(require("containers/RepoListItem"));

var _List = _interopRequireDefault(require("components/List"));

var _LoadingIndicator = _interopRequireDefault(require("components/LoadingIndicator"));

var _index = _interopRequireDefault(require("../index"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

describe('<ReposList />', function () {
  it('should render the loading indicator when its loading', function () {
    var renderedComponent = (0, _enzyme.shallow)(_react["default"].createElement(_index["default"], {
      loading: true
    }));
    expect(renderedComponent.contains(_react["default"].createElement(_List["default"], {
      component: _LoadingIndicator["default"]
    }))).toEqual(true);
  });
  it('should render an error if loading failed', function () {
    var renderedComponent = (0, _enzyme.mount)(_react["default"].createElement(_reactIntl.IntlProvider, {
      locale: "en"
    }, _react["default"].createElement(_index["default"], {
      loading: false,
      error: {
        message: 'Loading failed!'
      }
    })));
    expect(renderedComponent.text()).toMatch(/Something went wrong/);
  });
  it('should render the repositories if loading was successful', function () {
    var repos = [{
      owner: {
        login: 'mxstbr'
      },
      html_url: 'https://github.com/react-boilerplate/react-boilerplate',
      name: 'react-boilerplate',
      open_issues_count: 20,
      full_name: 'react-boilerplate/react-boilerplate'
    }];
    var renderedComponent = (0, _enzyme.shallow)(_react["default"].createElement(_index["default"], {
      repos: repos,
      error: false
    }));
    expect(renderedComponent.contains(_react["default"].createElement(_List["default"], {
      items: repos,
      component: _RepoListItem["default"]
    }))).toEqual(true);
  });
  it('should not render anything if nothing interesting is provided', function () {
    var renderedComponent = (0, _enzyme.shallow)(_react["default"].createElement(_index["default"], {
      repos: false,
      error: false,
      loading: false
    }));
    expect(renderedComponent.html()).toEqual(null);
  });
});