'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _ListItem = require('../ListItem');

var _ListItem2 = _interopRequireDefault(_ListItem);

var _Wrapper = require('./Wrapper');

var _Wrapper2 = _interopRequireDefault(_Wrapper);

var _excerpts = require('excerpts');

var _excerpts2 = _interopRequireDefault(_excerpts);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SearchListItem = function (_React$PureComponent) {
  _inherits(SearchListItem, _React$PureComponent);

  function SearchListItem() {
    _classCallCheck(this, SearchListItem);

    return _possibleConstructorReturn(this, (SearchListItem.__proto__ || Object.getPrototypeOf(SearchListItem)).apply(this, arguments));
  }

  _createClass(SearchListItem, [{
    key: 'formats',
    // eslint-disable-line react/prefer-stateless-function

    value: function formats(distributions) {
      if (!distributions) {
        return null;
      } else {
        var i = 0;
        return distributions.map(function (dist) {
          i++;
          var format = dist.format === undefined ? '' : dist.format.toLowerCase();
          return _react2.default.createElement(
            'div',
            { title: 'format: ' + dist.format,
              key: 'dist-id-' + dist.identifier + '-' + i,
              className: 'label',
              'data-format': format },
            format
          );
        });
      }
    }
  }, {
    key: 'themes',
    value: function themes(_themes) {
      if (!_themes) {
        return null;
      } else {
        var i = 0;
        return _themes.map(function (theme) {
          i++;
          var icon = theme.icon ? theme.icon : 'cog';
          return _react2.default.createElement(
            'div',
            { key: 'dist-' + theme.identifier + '-' + i },
            _react2.default.createElement('div', {
              title: 'theme: ' + theme.title, key: 'dist-id-' + theme.identifier + '-' + i,
              className: 'font-icon-select-1 font-icon-select-1-' + icon }),
            theme.title
          );
        });
      }
    }
  }, {
    key: 'render',
    value: function render() {

      var item = this.props.item;
      var description = (0, _excerpts2.default)(item.description, { words: 35 });
      var formats = this.formats(item.format);
      var themes = this.themes(item.theme);

      // Put together the content of the repository
      var content = _react2.default.createElement(
        _Wrapper2.default,
        { className: 'search-list-item' },
        _react2.default.createElement(
          'a',
          { href: '/dataset/{item.identifier}' },
          _react2.default.createElement(
            'h2',
            null,
            item.title
          )
        ),
        _react2.default.createElement(
          'div',
          { className: 'item-theme' },
          themes
        ),
        _react2.default.createElement(
          'div',
          { className: 'item-description' },
          description
        ),
        _react2.default.createElement(
          'div',
          { className: 'item-org' },
          _react2.default.createElement(
            'label',
            null,
            'organization:'
          ),
          ' ',
          item.publisher
        ),
        _react2.default.createElement(
          'div',
          { className: 'format-types' },
          formats
        )
      );

      // Render the content into a list item
      return _react2.default.createElement(_ListItem2.default, { key: 'repo-list-item-' + item.identifier, item: content });
    }
  }]);

  return SearchListItem;
}(_react2.default.PureComponent);

SearchListItem.defaultProps = {
  item: {
    "identifier": 1234,
    "title": "This is a title",
    "description": "I am an item",
    "modified": "1/12/2018",
    "publisher": "Publish Inc."
  }
};

SearchListItem.propTypes = {
  item: _propTypes2.default.object
};

exports.default = SearchListItem;