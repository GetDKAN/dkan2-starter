'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _ResultsList = require('./ResultsList');

var _ResultsList2 = _interopRequireDefault(_ResultsList);

var _List = require('../List');

var _List2 = _interopRequireDefault(_List);

var _ListItem = require('../ListItem');

var _ListItem2 = _interopRequireDefault(_ListItem);

var _LoadingIndicator = require('../LoadingIndicator');

var _LoadingIndicator2 = _interopRequireDefault(_LoadingIndicator);

var _SearchListItem = require('../SearchListItem');

var _SearchListItem2 = _interopRequireDefault(_SearchListItem);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SearchList = function (_Component) {
    _inherits(SearchList, _Component);

    function SearchList() {
        _classCallCheck(this, SearchList);

        return _possibleConstructorReturn(this, (SearchList.__proto__ || Object.getPrototypeOf(SearchList)).apply(this, arguments));
    }

    _createClass(SearchList, [{
        key: 'render',
        value: function render() {
            if (this.props.state === "loading") {
                return _react2.default.createElement(_List2.default, { component: _LoadingIndicator2.default });
            } else if (this.props.state === "error") {
                var ErrorComponent = function ErrorComponent() {
                    return _react2.default.createElement(_ListItem2.default, { item: 'Something went wrong, please try again!' });
                };
                return _react2.default.createElement(_List2.default, { component: ErrorComponent });
            } else if (this.props.items.length === 0) {
                return _react2.default.createElement(
                    'span',
                    null,
                    _react2.default.createElement(
                        'div',
                        null,
                        ' No records found, try another search term.'
                    )
                );
            } else {
                return _react2.default.createElement(_ResultsList2.default, { items: this.props.items, className: 'search-list', component: _SearchListItem2.default });
            }
        }
    }]);

    return SearchList;
}(_react.Component);

SearchList.defaultProps = {
    state: "loading",
    message: "Message",
    items: []
};

SearchList.propTypes = {
    state: _propTypes2.default.string,
    message: _propTypes2.default.string,
    items: _propTypes2.default.any
};

exports.default = SearchList;