'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Wrapper = require('./Wrapper');

var _Wrapper2 = _interopRequireDefault(_Wrapper);

var _Button = require('../Button');

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Hero = function (_React$Component) {
  _inherits(Hero, _React$Component);

  function Hero() {
    _classCallCheck(this, Hero);

    return _possibleConstructorReturn(this, (Hero.__proto__ || Object.getPrototypeOf(Hero)).apply(this, arguments));
  }

  _createClass(Hero, [{
    key: 'render',
    value: function render() {

      var Background = this.props.image;
      var Align = this.props.alignment;

      return _react2.default.createElement(
        _Wrapper2.default,
        { className: 'hero', style: { backgroundImage: 'url(' + Background + ')' } },
        _react2.default.createElement(
          'div',
          { className: 'block ' + Align },
          _react2.default.createElement(
            'h1',
            { className: 'hero-title' },
            this.props.title,
            this.props.title2
          ),
          _react2.default.createElement(
            'p',
            null,
            this.props.intro
          ),
          _react2.default.createElement(
            _Button2.default,
            { href: '/about', className: 'btn-hero' },
            'Learn more'
          )
        )
      );
    }
  }]);

  return Hero;
}(_react2.default.Component);

Hero.defaultProps = {
  state: "loading",
  identifier: "1234",
  image: "https://s3.amazonaws.com/dkan-default-content-files/files/d2-hero.jpg",
  title: "Welcome to DKAN",
  intro: "DKAN is an open-source data management platform. It treats data as content so that you can easily publish, manage, and maintain your open data no matter the size of your team or the level of technical expertise.",
  alignment: "center"
};

Hero.propTypes = {
  state: _propTypes2.default.string,
  item: _propTypes2.default.any
};

exports.default = Hero;